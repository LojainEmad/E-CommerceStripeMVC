@model IEnumerable<ProductEntity>

<div class="container my-5">
    <h2 class="text-center fw-bold mb-5">
        🛒 Explore Our Products
    </h2>

    <div class="row g-4">
        @foreach (var item in Model)
        {
            <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                <div class="card product-card h-100 shadow-sm border-0">
                    
                    <div class="product-img-container">
                        <img src="@item.Image" class="card-img-top p-3" alt="@item.Title" />
                    </div>

                    <div class="card-body d-flex flex-column text-center">
                        <h5 class="card-title fw-bold text-truncate">@item.Title</h5>
                        <p class="text-muted small mb-1">@item.Category</p>
                        <p class="text-muted small mb-1">@item.Description</p>
                        <p class="fw-bold price-tag mb-3">$@item.Price</p>

                        <form class="add-to-cart-form mt-auto" data-id="@item.Id">
                            <button type="submit" class="btn btn-outline-primary w-100">
                                🛒 Add to Cart
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="text-center mt-5">
        <a asp-action="Index" asp-controller="Cart" class="btn btn-success btn-lg px-4 py-2 shadow">
            🛍 Proceed to Checkout
        </a>
    </div>
</div>

<div id="cart-badge" class="cart-badge">0</div>

<script>
    document.querySelectorAll('.add-to-cart-form').forEach(form => {
        form.addEventListener('submit', function (e) {
            e.preventDefault();
            const productId = parseInt(this.getAttribute('data-id'));

            fetch('/Cart/AddToCart', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: productId })
            })
            .then(r => r.json())
            .then(d => {
                if (d.success) {
                    document.getElementById("cart-badge").textContent = d.count;
                    document.getElementById("cart-badge").classList.add("bump");
                    setTimeout(() => {
                        document.getElementById("cart-badge").classList.remove("bump");
                    }, 300);
                } else {
                    alert("❌ " + d.message);
                }
            });
        });
    });
</script>
<style>
    body {
        background: #f9f9f9;
    }

    .product-card {
        border-radius: 15px;
        overflow: hidden;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0px 10px 20px rgba(0,0,0,0.15);
        }

    .product-img-container {
        background: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 220px;
        overflow: hidden;
    }

        .product-img-container img {
            max-height: 200px;
            object-fit: contain;
        }

    .price-tag {
        color: #28a745;
        font-size: 1.2rem;
    }

    .cart-badge {
        position: fixed;
        top: 20px;
        right: 25px;
        background: #28a745;
        color: white;
        font-weight: bold;
        padding: 8px 12px;
        border-radius: 50%;
        font-size: 1rem;
        box-shadow: 0 3px 6px rgba(0,0,0,0.2);
        transition: transform 0.3s ease;
        z-index: 999;
    }

        .cart-badge.bump {
            transform: scale(1.3);
        }
</style>
